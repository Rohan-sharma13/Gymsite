{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  items: []\n};\nexport const basketSlice = createSlice({\n  name: \"basket\",\n  initialState,\n  reducers: {\n    addToBasket: (state, action) => {\n      state.items = [...state.items, action.payload];\n    },\n    removeFromBasket: (state, action) => {\n      const index = state.items.findIndex(basketItem => basketItem.id === action.payload.id);\n      let newBasket = [...state.items];\n      if (index >= 0) {\n        // item exists\n        newBasket.splice(index, 1);\n      } else {\n        // item doesn't exist\n        console.warn(\"not able to remove item from basket\");\n      }\n      state.items = newBasket;\n    }\n  }\n});\nexport const {\n  addToBasket,\n  removeFromBasket\n} = basketSlice.actions;\n\n// Selectors - This is how we pull information from the Global store slice\nexport const selectItems = state => state.basket.items;\nexport const selectTotal = state => state.basket.items.reduce((total, item) => total + +item.price, 0);\nexport default basketSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","items","basketSlice","name","reducers","addToBasket","state","action","payload","removeFromBasket","index","findIndex","basketItem","id","newBasket","splice","console","warn","actions","selectItems","basket","selectTotal","reduce","total","item","price","reducer"],"sources":["/Users/jassbawa/Desktop/GymHut-deployedCode/client/src/basketSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  items: [],\n};\n\nexport const basketSlice = createSlice({\n  name: \"basket\",\n  initialState,\n  reducers: {\n    addToBasket: (state, action) => {\n      state.items = [...state.items, action.payload];\n    },\n    removeFromBasket: (state, action) => {\n      const index = state.items.findIndex(\n        (basketItem) => basketItem.id === action.payload.id\n      );\n\n      let newBasket = [...state.items];\n      if (index >= 0) {\n        // item exists\n        newBasket.splice(index, 1);\n      } else {\n        // item doesn't exist\n        console.warn(\"not able to remove item from basket\");\n      }\n\n      state.items = newBasket;\n    },\n  },\n});\n\nexport const { addToBasket, removeFromBasket } = basketSlice.actions;\n\n// Selectors - This is how we pull information from the Global store slice\nexport const selectItems = (state) => state.basket.items;\nexport const selectTotal = (state) =>\n  state.basket.items.reduce((total, item) => total + +item.price, 0);\n\nexport default basketSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMC,WAAW,GAAGH,WAAW,CAAC;EACrCI,IAAI,EAAE,QAAQ;EACdH,YAAY;EACZI,QAAQ,EAAE;IACRC,WAAW,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC9BD,KAAK,CAACL,KAAK,GAAG,CAAC,GAAGK,KAAK,CAACL,KAAK,EAAEM,MAAM,CAACC,OAAO,CAAC;IAChD,CAAC;IACDC,gBAAgB,EAAEA,CAACH,KAAK,EAAEC,MAAM,KAAK;MACnC,MAAMG,KAAK,GAAGJ,KAAK,CAACL,KAAK,CAACU,SAAS,CAChCC,UAAU,IAAKA,UAAU,CAACC,EAAE,KAAKN,MAAM,CAACC,OAAO,CAACK,EACnD,CAAC;MAED,IAAIC,SAAS,GAAG,CAAC,GAAGR,KAAK,CAACL,KAAK,CAAC;MAChC,IAAIS,KAAK,IAAI,CAAC,EAAE;QACd;QACAI,SAAS,CAACC,MAAM,CAACL,KAAK,EAAE,CAAC,CAAC;MAC5B,CAAC,MAAM;QACL;QACAM,OAAO,CAACC,IAAI,CAAC,qCAAqC,CAAC;MACrD;MAEAX,KAAK,CAACL,KAAK,GAAGa,SAAS;IACzB;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAET,WAAW;EAAEI;AAAiB,CAAC,GAAGP,WAAW,CAACgB,OAAO;;AAEpE;AACA,OAAO,MAAMC,WAAW,GAAIb,KAAK,IAAKA,KAAK,CAACc,MAAM,CAACnB,KAAK;AACxD,OAAO,MAAMoB,WAAW,GAAIf,KAAK,IAC/BA,KAAK,CAACc,MAAM,CAACnB,KAAK,CAACqB,MAAM,CAAC,CAACC,KAAK,EAAEC,IAAI,KAAKD,KAAK,GAAG,CAACC,IAAI,CAACC,KAAK,EAAE,CAAC,CAAC;AAEpE,eAAevB,WAAW,CAACwB,OAAO"},"metadata":{},"sourceType":"module"}